name: deploy imc back
on:
  push :
  workflow_dispatch:

env:
  IMAGE: imc-ui
  VERSION: 1.0.0
jobs:
  create-folder:
    name: create folder
    runs-on: ubuntu-latest
    steps:
      - name: execute commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            mkdir /opt/applications/imc/imc-ms
            ls -al /opt/applications/imc

  generate-image:
    name: generate image
    runs-on: ubuntu-latest
    needs: [ 'create-folder' ]
    steps:
      - name: cloner le repertoire
        uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: javadev09177/${{env.IMAGE}}:${{env.VERSION}}

  run-container:
    name: run container
    runs-on: ubuntu-latest
    needs: [ 'create-folder', 'generate-image']
    steps:
      - name: cloner le repertoire
        uses: actions/checkout@master
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "compose.yml"
          target: /opt/applications/imc/${{env.IMAGE}}
      - name: execute commands to run container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            echo DB_HOST="${{ secrets.DB_HOST }}" > /opt/applications/imc/${{env.IMAGE}}/.env
            echo DB_USERNAME="${{ secrets.DB_USERNAME }}" >> /opt/applications/imc/${{env.IMAGE}}/.env
            echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> /opt/applications/imc/${{env.IMAGE}}/.env
            docker-compose -f /opt/applications/imc/${{env.IMAGE}}/compose.yml up -d
             rm /opt/applications/imc/${{env.IMAGE}}/.env